<?php

namespace FKSDB\Tests\PresentersTests\OrgModule;

use FKSDB\ORM\DbNames;
use FKSDB\Tests\ModelTests\DatabaseTestCase;
use Nette\Application\IResponse;
use Nette\Application\Request;
use Nette\Application\Responses\TextResponse;
use Nette\Application\UI\ITemplate;
use Tester\Assert;

class OrgPresenter extends DatabaseTestCase {
    /** @var array */
    private $personIds;
    /** @var array */
    private $orgIds;

    protected function setUp() {
        parent::setUp();
        for ($i = 0; $i < 3; $i++) {
            $this->personIds = [];
            $this->orgIds = [];
            $personId = $this->createPerson('Tester_' . $i, 'Testrovič_' . $i);
            $this->personIds[] = $personId;
            $this->orgIds[] = $this->insert(DbNames::TAB_ORG, ['person_id' => $personId, 'contest_id' => 1, 'since' => 0, 'order' => 0]);
        }
    }

    public function testList() {
        $this->assertPageDisplay($response);
    }

    public function testCreate() {
        $this->assertPageDisplay($response);
    }

    public function testEdit() {
        $this->assertPageDisplay($response);
    }

    public function testDetail() {
        $this->assertPageDisplay($response);
    }

    protected function assertPageDisplay(IResponse $response): string {
        Assert::type(TextResponse::class, $response);
        $source = $response->getSource();
        Assert::type(ITemplate::class, $source);

        Assert::noError(function () use ($source) {
            return (string)$source;
        });
        return (string)$source;
    }

    protected function createRequest(string $action, array $params): Request {
        $params['lang'] = $params['lang'] ?? 'en';
        $params['action'] = $action;
        return new Request('Org:Org', 'GET', $params);
    }

    protected function tearDown() {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
